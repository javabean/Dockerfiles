%YAML 1.2
---
# https://docs.docker.com/compose/compose-file/
# https://hub.docker.com/explore/

version: '2.4'

services:

  base-service:
    build: .
    labels:
      - "traefik.enable=false"
    #expose:
    ## Consul agent ports
    #- "8301"
    #- "8301/udp"
    ##- "8400"
    ##- "8500"
    environment:
    # please note that SYSLOG requires read_only: false (as it needs creating /dev/log) for Docker < 17.12.0
    #- ENABLE_SYSLOG=1
    #- ENABLE_CRON=1
    #- ENABLE_CONSUL=1
    # Force PHP/Symfony, NodeJS & Ruby on Rails applications to production
    - APP_ENV=prod
    - APP_DEBUG=0
    - NODE_ENV=production
    - RAILS_ENV=production
    tmpfs:
    # default tmpfs opts: rw,nosuid,nodev,noexec,relatime,size=65536k
    - /run:rw,nosuid,noexec,relatime,size=65536k,mode=755
    - /run/lock:rw,nosuid,nodev,noexec,relatime,size=5120k
    #- /var/log
    #- /var/cache
    #- /var/tmp
    - /tmp:rw,nosuid,nodev,noexec,size=131072k,mode=1777,strictatime
    # PHP.ini 'session.save_path'
    #- /var/lib/php/sessions
    # required for syslog
    #- /var/lib/syslog-ng:rw,nosuid,nodev,noexec,relatime,size=16k
    # required for logrotate
    - /var/lib/logrotate:rw,nosuid,nodev,noexec,relatime,size=16k
    # mount work dir for runit
    - /var/lib/runit-sv:rw,suid,nodev,exec,size=1024k
    # mount work dir for consul
    #- /usr/local/etc/consul.d:rw,nosuid,nodev,noexec,size=128k
    #shm_size: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
        compress: "true"
    cpu_shares: 1024
    mem_limit: 128m
    memswap_limit: 192m
    mem_swappiness: 1
    #mem_reservation: 128m
    read_only: true
    restart: "no"

########################################################################

  # to configure backends: https://docs.traefik.io/providers/docker/
  traefik:
    extends:
      service: base-service
    image: traefik:${TRAEFIK_VERSION:-2.3}
    init: true
    # https://docs.traefik.io/v2.3/reference/dynamic-configuration/docker/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-http.rule=Host(`traefik.docker.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.traefik-http.entrypoints=http"
      - "traefik.http.routers.traefik-http.middlewares=403"
      - "traefik.http.routers.traefik-https.rule=Host(`traefik.docker.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.traefik-https.entrypoints=https"
      - "traefik.http.routers.traefik-https.middlewares=std-ipwhitelist,traefik-authentication,defaultchain-https"
      - "traefik.http.routers.traefik-https.service=api@internal"
      # Note: If a TLS section (i.e. any of its fields) is user-defined, then the default configuration does not apply at all.
#      - "traefik.http.routers.traefik-https.tls=true"
#      - "traefik.http.routers.traefik-https.tls.certresolver=letsencrypt"
#      - "traefik.http.routers.traefik-https.tls.options=default"
      #- "traefik.http.routers.traefik-https.priority=42"
      - "traefik.http.middlewares.traefik-authentication.basicauth.usersFile=.htpasswd"
      - "traefik.http.middlewares.traefik-authentication.basicauth.realm=traefik"
      #- "traefik.http.middlewares.traefik-authentication.digestauth.usersFile=.htdigest"
      #- "traefik.http.middlewares.traefik-authentication.digestauth.realm=traefik"
      #- "traefik.http.services.traefik-service.loadbalancer.sticky=true"
      #- "traefik.http.services.traefik-service.loadbalancer.sticky.cookie.httponly=true"
      #- "traefik.http.services.traefik-service.loadbalancer.sticky.cookie.secure=true"
      #- "traefik.http.services.traefik-service.loadbalancer.server.port=8000"

      #####################################################
      # Standard middlewares, available to all containers #
      #####################################################
      - "traefik.http.middlewares.redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect.redirectscheme.permanent=true"
      - "traefik.http.middlewares.compress.compress=true"
      - "traefik.http.middlewares.std-headers.headers.addvaryheader=true"
      - "traefik.http.middlewares.std-headers.headers.browserxssfilter=true"
      - "traefik.http.middlewares.std-headers.headers.contentsecuritypolicy=frame-ancestors 'self' example.com *.example.net ; object-src 'none' ; connect-src 'self' * ;"
      - "traefik.http.middlewares.std-headers.headers.contenttypenosniff=true"
      - "traefik.http.middlewares.std-headers.headers.framedeny=true"
      - "traefik.http.middlewares.std-headers.headers.customFrameOptionsValue=sameorigin"
      - "traefik.http.middlewares.std-headers.headers.stspreload=false"
      #- "traefik.http.middlewares.std-headers.headers.customresponseheaders.name0=foobar"
      - >-
          traefik.http.middlewares.std-ipwhitelist.ipwhitelist.sourcerange=192.168.0.0/16, 172.16.0.0/12,
          10.0.0.0/8
      - "traefik.http.middlewares.403.ipwhitelist.sourcerange=127.1.2.7"
      - "traefik.http.middlewares.defaultchain-http.chain.middlewares=std-headers,redirect"
      - "traefik.http.middlewares.defaultchain-https.chain.middlewares=std-headers,compress"
      - "traefik.tls.options.default.minVersion=VersionTLS12"
      #- "traefik.tls.options.default.sniStrict=true"
      #- "traefik.docker.network=default"
      
      # To disallow /admin path, one can not simply use negative lookaround:
      #   "traefik.http.routers.http.rule=Host(`example.com`) && PathPrefix(`/{re:(?!admin|manager).*}/`)"
      # because: (?!re)	before text not matching re (NOT SUPPORTED) (https://github.com/google/re2/wiki/Syntax)
      # Workaround (ugly, but it works): use deny-all middleware:
      # # Allow general traffic (low prioriy rule)
      # - "traefik.http.routers.http.rule=Host(`example.com`)"
      # # Forbid admin endpoint on plain http
      # - "traefik.http.routers.my-403.rule=Host(`example.com`) && PathPrefix(`/{re:(?i:admin|install).*}`)"
      # - "traefik.http.routers.my-403.entrypoints=http"
      # - "traefik.http.routers.my-403.priority=65535"
      # - "traefik.http.routers.my-403.middlewares=403"
      # # IP restriction on https admin endpoint
      # - "traefik.http.routers.my-407.rule=Host(`example.com`) && PathPrefix(`/{re:(?i:admin|install).*}`)"
      # - "traefik.http.routers.my-407.entrypoints=https"
      # - "traefik.http.routers.my-407.priority=65535"
      # - "traefik.http.routers.my-407.middlewares=std-ipwhitelist,defaultchain-https"
    expose:
    - "8080"
    ports:
    - "80:80"
    - "443:443"
    environment:
    # https://docs.traefik.io/v2.3/reference/static-configuration/env/
    - TRAEFIK_GLOBAL_CHECKNEWVERSION=false
    - TRAEFIK_GLOBAL_SENDANONYMOUSUSAGE=false
    - TRAEFIK_PROVIDERS_PROVIDERSTHROTTLEDURATION=2
    - TRAEFIK_PROVIDERS_DOCKER=true
    - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false
    #- TRAEFIK_PROVIDERS_DOCKER_NETWORK=
    - TRAEFIK_API=true
    - TRAEFIK_API_DASHBOARD=true
    - TRAEFIK_PING=true
    - TRAEFIK_PING_ENTRYPOINT=http
    - TRAEFIK_ENTRYPOINTS_traefik=true
    - TRAEFIK_ENTRYPOINTS_traefik_ADDRESS=:8080
    - TRAEFIK_ENTRYPOINTS_http=true
    - TRAEFIK_ENTRYPOINTS_http_ADDRESS=:80
    - TRAEFIK_ENTRYPOINTS_https=true
    - TRAEFIK_ENTRYPOINTS_https_ADDRESS=:443
    - TRAEFIK_ENTRYPOINTS_https_HTTP_TLS=true
    - TRAEFIK_ENTRYPOINTS_https_HTTP_TLS_CERTRESOLVER=letsencrypt
    # see "traefik.tls.options.default.xxx" in Docker labels
    - TRAEFIK_ENTRYPOINTS_https_HTTP_TLS_OPTIONS=default
    - TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt=true
    #- TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_EMAIL=me@example.com
    #- TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_TLSCHALLENGE=true
    - TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_HTTPCHALLENGE=true
    - TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_HTTPCHALLENGE_ENTRYPOINT=http
    - TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_STORAGE=/acme.json
    - TRAEFIK_LOG=true
    # PANIC, FATAL, ERROR, WARN, INFO, DEBUG
    - TRAEFIK_LOG_LEVEL=WARN
    #- TRAEFIK_ACCESSLOG=true
    #- TRAEFIK_ACCESSLOG_BUFFERINGSIZE=100
    #- TRAEFIK_ACCESSLOG_FILTERS_MINDURATION=500ms
    #- TRAEFIK_ACCESSLOG_FILTERS_STATUSCODES="200, 300-302"
    - TRAEFIK_SERVERSTRANSPORT_INSECURESKIPVERIFY=true
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    #- /opt/traefik/traefik.toml:/etc/traefik/traefik.toml:ro
    # create with: touch /opt/traefik/acme.json && chmod 600 /opt/traefik/acme.json
    - /opt/traefik/acme.json:/acme.json
    # docker container run --rm -ti httpd:2.4-alpine htpasswd -n <user> >> /opt/traefik/htpasswd
    # docker container run --rm -ti -v /opt/traefik/htpasswd:/.htpasswd httpd:2.4-alpine htpasswd /.htpasswd <user>
    - /opt/traefik/htpasswd:/.htpasswd:ro
    # docker container run --rm -ti -v /opt/traefik/htdigest:/.htdigest httpd:2.4-alpine htdigest /.htdigest <realm> <username>
    - /opt/traefik/htdigest:/.htdigest:ro
    healthcheck:
      test: ["CMD", "/usr/local/bin/traefik", "healthcheck"]
      interval: 240s
      timeout: 5s
      retries: 1
      start_period: 10s
    networks:
    # "default" needed to get connectivity from outside(!)
    - default
    - http-static
    - tomcat-front
    - owncloud-front
    - nextcloud-front
    - ttrss-front
    - wordpress-front
    - dokuwiki-front
    - tiddlywiki-front
    - droppy
    - transmission
    - bitwarden
    - icecast-front
#    - daapd-front
    - statping-front
    - vpn
    - webssh
    cpu_shares: 256
    mem_limit: 128m
    memswap_limit: 192m
    mem_reservation: 64m
    restart: always

  http-static:
    extends:
      service: base-service
    build: apache-static
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.http-static-http.rule=Host(`example.com`,`example.net`)"
      - "traefik.http.routers.http-static-http.entrypoints=http"
      - "traefik.http.routers.http-static-http.middlewares=defaultchain-http"
      - "traefik.http.routers.http-static-https.rule=Host(`example.com`,`example.net`)"
      - "traefik.http.routers.http-static-https.entrypoints=https"
      - "traefik.http.routers.http-static-https.middlewares=defaultchain-https"
      - "traefik.http.services.http-static-service.loadbalancer.server.port=80"
    expose:
    - "80"
    volumes:
    #- /opt/http-static/mods-available:/opt/http-static/mods-available:ro
    - /opt/http-static/mods-enabled:/opt/http-static/mods-enabled:ro
    #- /opt/http-static/conf-available:/opt/http-static/conf-available:ro
    - /opt/http-static/conf-enabled:/opt/http-static/conf-enabled:ro
    - /opt/http-static/conf-include:/opt/http-static/conf-include:ro
    #- /opt/http-static/sites-available:/opt/http-static/sites-available:ro
    - /opt/http-static/sites-enabled:/opt/http-static/sites-enabled:ro
    - /srv/http-static:/var/www:ro
    - /srv/logs/http-static:/var/log
    networks:
    - http-static
    cpu_shares: 256
    mem_limit: 128m
    memswap_limit: 192m
    mem_reservation: 96m
    restart: unless-stopped

  http-proxy:
    extends:
      service: base-service
    build: apache-proxy
#    expose:
#    - "443"
    ports:
    - "80:80"
    - "443:443"
    #depends_on:
    #- tomcat
    #- owncloud
    #- wordpress
    #- dokuwiki
    #- tiddlywiki
    links:
    - tomcat:tomcat
    - owncloud:owncloud
    - wordpress:wordpress
    #- dokuwiki:dokuwiki
    #- tiddlywiki:tiddlywiki
    #- droppy:droppy
    #- transmission:transmission
    - portainer:portainer
    volumes:
    #- /opt/http-proxy/mods-available:/opt/http-proxy/mods-available:ro
    - /opt/http-proxy/mods-enabled:/opt/http-proxy/mods-enabled:ro
    #- /opt/http-proxy/conf-available:/opt/http-proxy/conf-available:ro
    - /opt/http-proxy/conf-enabled:/opt/http-proxy/conf-enabled:ro
    - /opt/http-proxy/conf-include:/opt/http-proxy/conf-include:ro
    #- /opt/http-proxy/sites-available:/opt/http-proxy/sites-available:ro
    - /opt/http-proxy/sites-enabled:/opt/http-proxy/sites-enabled:ro
    #- /opt/letsencrypt:/etc/letsencrypt:ro,z
    - /srv/GeoIP:/usr/local/share/GeoIP:ro,z
    - /opt/http-proxy/tls:/srv/md
    - /srv/http-proxy:/var/www:ro
    - /srv/logs/http-proxy:/var/log
    networks:
    # "default" needed to get connectivity from outside(!)
    - default
    - tomcat-front
    - owncloud-front
    - nextcloud-front
    - ttrss-front
    - wordpress-front
    - dokuwiki-front
    - tiddlywiki-front
    - droppy
    - transmission
    #- bitwarden
    #- icecast-front
    #- statping-front
    - vpn
    - webssh
    cpu_shares: 256
    mem_limit: 128m
    memswap_limit: 192m
    mem_reservation: 96m
    restart: always

  sslh:
    extends:
      service: base-service
    build: sslh
    #command: ["--ssl", "http-proxy:443", "--openvpn", "openvpn:1194", "--on-timeout", "http-proxy:443"]
    command: ["--tls", "http-proxy:443", "--on-timeout", "http-proxy:443"]
    ports:
    - "9443:443"
    depends_on:
      http-proxy:
        condition: service_started
#      openvpn:
#        condition: service_started
    cap_add:
    - NET_BIND_SERVICE
    - NET_ADMIN
    - SETGID
    - SETUID
    networks:
    - default
#    - vpn
    cpu_shares: 128
    mem_limit: 64m
    memswap_limit: 96m
    mem_reservation: 32m
    restart: unless-stopped

########################################################################

  portainer:
    extends:
      service: base-service
    image: portainer/portainer
    init: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer-http.rule=Host(`portainer.docker.localhost`)"
      - "traefik.http.routers.portainer-http.entrypoints=http"
      - "traefik.http.routers.portainer-http.middlewares=403"
      - "traefik.http.routers.portainer-https.rule=Host(`portainer.docker.localhost`)"
      - "traefik.http.routers.portainer-https.entrypoints=https"
      - "traefik.http.routers.portainer-https.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.services.portainer-service.loadbalancer.server.port=9000"
    #command: ["--tlsverify", "--tlscacert", "/certs/ca.pem", "--tlscert", "/certs/cert.pem", "--tlskey", "/certs/key.pem"]
    #command: ["--templates", "https://raw.githubusercontent.com/portainer/templates/master/templates.json"]
    command: ["--no-analytics"]
    expose:
    - "9000"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /srv/portainer/acme-challenge/.well-known:/public/.well-known:ro
    #- /opt/portainer/certs:/certs
    - /srv/portainer/data:/data
    cpu_shares: 128
    mem_limit: 64m
    memswap_limit: 96m
    mem_reservation: 32m
    restart: unless-stopped

########################################################################

  tomcat:
    extends:
      service: base-service
    build:
      context: tomcat
      args:
      - DOCKER_FROM_VERSION=9-jdk11-openjdk-slim
    init: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tomcat-http.rule=Host(`example.com`,`example.net`)"
      - "traefik.http.routers.tomcat-http.entrypoints=http"
      - "traefik.http.routers.tomcat-http.middlewares=403"
      - "traefik.http.routers.tomcat-https.rule=Host(`example.com`,`example.net`)"
      - "traefik.http.routers.tomcat-https.entrypoints=https"
      - "traefik.http.routers.tomcat-https.middlewares=defaultchain-https"
      - "traefik.http.services.tomcat-service.loadbalancer.server.port=8080"
    expose:
    - "8080"
    - "8443"
    - "8008"
    - "8009"
    environment:
    # See $CATALINA_HOME/bin/catalina.sh for available env vars,
    # and $CATALINA_BASE/bin/setenv.sh for additional configuration
    - CATALINA_BASE=/opt/tomcat/my-instance
    user: tomcat
    depends_on:
      email-relay:
        condition: service_started
    links:
    - email-relay:email-relay
    volumes:
    - /opt/tomcat:/opt/tomcat
    networks:
    - tomcat-front
    - tomcat-back-internal
    - tomcat-back
    mem_limit: 1024m
    memswap_limit: 1024m
    mem_swappiness: 1
    mem_reservation: 1024m
    restart: on-failure:2

########################################################################

  owncloud:
    extends:
      service: base-service
    #image: owncloud/server:latest
    build:
      context: owncloud
      args:
      # https://owncloud.org/release-channels/
      #- OWNCLOUD_VERSION=10.5.0
      #- OWNCLOUD_VERSION=stable
      - OWNCLOUD_VERSION=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.owncloud-http.rule=Host(`owncloud.example.net`)"
      - "traefik.http.routers.owncloud-http.entrypoints=http"
      - "traefik.http.routers.owncloud-http.middlewares=defaultchain-http"
      - "traefik.http.routers.owncloud-https.rule=Host(`owncloud.example.net`)"
      - "traefik.http.routers.owncloud-https.entrypoints=https"
      - "traefik.http.routers.owncloud-https.middlewares=std-ipwhitelist,owncloud-dav-redirect,defaultchain-https"
      - "traefik.http.services.owncloud-service.loadbalancer.server.port=80"
      # redirect DAV well-known endpoints
      - "traefik.http.middlewares.owncloud-dav-redirect.redirectregex.permanent=true"
      - "traefik.http.middlewares.owncloud-dav-redirect.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.owncloud-dav-redirect.redirectregex.replacement=https://$$1/remote.php/dav/"
    expose:
    - "80"
    - "443"
    environment:
    - ENABLE_CRON=1
    #- ENABLE_SYSLOG=1
    #- SERVER_NAME=https://www.example.com
    depends_on:
      redis-owncloud:
        condition: service_healthy
      email-relay:
        condition: service_started
    links:
    - mysql:mysql
    #- memcached-owncloud:memcached
    - redis-owncloud:redis
    - email-relay:email-relay
    volumes:
    - /srv/owncloud/acme-challenge/.well-known:/var/www/owncloud/.well-known:ro
    - /opt/owncloud/config:/var/www/owncloud/config
    - /opt/owncloud/apps:/var/www/owncloud/apps-external
    - /opt/owncloud/ip-restriction.conf:/etc/apache2/conf-enabled/ip-restriction.conf:ro
    - /srv/owncloud:/srv/owncloud
    - /srv/logs/owncloud:/var/log
    networks:
    - owncloud-front
    - owncloud-back-internal
    - owncloud-back
    mem_limit: 384m
    memswap_limit: 512m
    mem_reservation: 256m
    read_only: false
    restart: unless-stopped

########################################################################

  nextcloud:
    extends:
      service: base-service
    #image: nextcloud:latest
    build:
      context: nextcloud
      args:
      # https://nextcloud.com/release-channels/
      #- DOCKER_FROM_TAG=20-apache
      #- DOCKER_FROM_TAG=stable-apache
      - DOCKER_FROM_TAG=production-apache
    init: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud-http.rule=Host(`nextcloud.example.net`)"
      - "traefik.http.routers.nextcloud-http.entrypoints=http"
      - "traefik.http.routers.nextcloud-http.middlewares=defaultchain-http"
      - "traefik.http.routers.nextcloud-https.rule=Host(`nextcloud.example.net`)"
      - "traefik.http.routers.nextcloud-https.entrypoints=https"
      - "traefik.http.routers.nextcloud-https.middlewares=std-ipwhitelist,nextcloud-dav-redirect,defaultchain-https"
      - "traefik.http.services.nextcloud-service.loadbalancer.server.port=80"
      # redirect DAV well-known endpoints
      - "traefik.http.middlewares.nextcloud-dav-redirect.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud-dav-redirect.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloud-dav-redirect.redirectregex.replacement=https://$$1/remote.php/dav/"
    expose:
    - "80"
    - "443"
    # https://github.com/nextcloud/docker/blob/master/README.md
    environment:
    - MYSQL_HOST=mysql
    - MYSQL_DATABASE=nextcloud
    #- MYSQL_USER=nextcloud
    #- MYSQL_PASSWORD=HJ79WetJELxrbgc3rwed9Jzh
    - REDIS_HOST=redis-nextcloud
    #- REDIS_HOST_PORT=6379
    - SMTP_HOST=email-relay
    - MAIL_FROM_ADDRESS=nextcloud-noreply
    - MAIL_DOMAIN=example.com
    #- NEXTCLOUD_ADMIN_USER=admin
    #- NEXTCLOUD_ADMIN_PASSWORD=x4uhbXqGsG9qU43mPBrvAYE8
    - NEXTCLOUD_DATA_DIR=/srv/nextcloud/data
    #- NEXTCLOUD_TRUSTED_DOMAINS="example.com www.example.com"
    # Launch a cron daemon in the background (instead of relying on an external cron)
    #- ENABLE_CRON=1
    depends_on:
      redis-nextcloud:
        condition: service_healthy
      email-relay:
        condition: service_started
    links:
    - mysql:mysql
    #- memcached-nextcloud:memcached
    - redis-nextcloud:redis
    - email-relay:email-relay
    volumes:
    - /srv/nextcloud/acme-challenge/.well-known:/var/www/html/.well-known:ro
    - /opt/nextcloud/config:/var/www/html/config
    - /opt/nextcloud/custom_apps:/var/www/html/custom_apps
    - /opt/nextcloud/themes:/var/www/html/themes
    - /srv/nextcloud/data:/srv/nextcloud/data
    networks:
    - nextcloud-front
    - nextcloud-back-internal
    - nextcloud-back
    mem_limit: 384m
    memswap_limit: 512m
    mem_reservation: 256m
    read_only: false
    restart: unless-stopped

  nextcloud-cron:
    image: nextcloud:production-apache
    init: true
    depends_on:
      nextcloud:
        condition: service_healthy
      email-relay:
        condition: service_started
    links:
    - mysql:mysql
    - email-relay:email-relay
    volumes_from:
    - nextcloud
    command: [ "/cron.sh" ]
    networks:
    - nextcloud-back-internal
    - nextcloud-back
    mem_limit: 384m
    memswap_limit: 512m
    mem_reservation: 256m
    read_only: true
    restart: unless-stopped

########################################################################

  wordpress:
    extends:
      service: base-service
    #image: wordpress:latest
    build:
      context: wordpress
      args:
      #- WORDPRESS_VERSION=wordpress-5.2.5
      - WORDPRESS_VERSION=latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress-http.rule=Host(`wordpress.example.net`)"
      - "traefik.http.routers.wordpress-http.entrypoints=http"
      - "traefik.http.routers.wordpress-http.middlewares=defaultchain-http"
      - "traefik.http.routers.wordpress-https.rule=Host(`wordpress.example.net`)"
      - "traefik.http.routers.wordpress-https.entrypoints=https"
      - "traefik.http.routers.wordpress-https.middlewares=defaultchain-https"
      - "traefik.http.services.wordpress-service.loadbalancer.server.port=80"
      # IP restriction on https /admin endpoint
      # Forbid admin endpoint on plain http
      - "traefik.http.routers.wordpress-403.rule=Host(`wordpress.example.net`) && PathPrefix(`/{re:(?i:wp-admin|wp-login|xmlrpc|wp-json).*}`)"
      - "traefik.http.routers.wordpress-403.entrypoints=http"
      - "traefik.http.routers.wordpress-403.priority=65535"
      - "traefik.http.routers.wordpress-403.middlewares=403"
      # IP restriction on https admin endpoint
      - "traefik.http.routers.wordpress-407.rule=Host(`wordpress.example.net`) && PathPrefix(`/{re:(?i:wp-admin|wp-login|xmlrpc|wp-json).*}`)"
      - "traefik.http.routers.wordpress-407.entrypoints=https"
      - "traefik.http.routers.wordpress-407.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.routers.wordpress-407.priority=65535"
    expose:
    - "80"
    - "443"
    #environment:
    #- WORDPRESS_DB_HOST=mysql
    #- WORDPRESS_DB_USER=root
    #- WORDPRESS_DB_PASSWORD=
    #- WORDPRESS_DB_NAME=wordpress
    #- WORDPRESS_TABLE_PREFIX=
    # WordPress key generator: https://api.wordpress.org/secret-key/1.1/salt/
    #- WORDPRESS_AUTH_KEY=
    #- WORDPRESS_SECURE_AUTH_KEY=
    #- WORDPRESS_LOGGED_IN_KEY=
    #- WORDPRESS_NONCE_KEY=
    #- WORDPRESS_AUTH_SALT=
    #- WORDPRESS_SECURE_AUTH_SALT=
    #- WORDPRESS_LOGGED_IN_SALT=
    #- WORDPRESS_NONCE_SALT=
    depends_on:
      mysql:
        condition: service_healthy
      email-relay:
        condition: service_started
    links:
    - mysql:mysql
    #- memcached-wordpress:memcached
    - email-relay:email-relay
    volumes:
    - /srv/wordpress/acme-challenge/.well-known:/var/www/html/.well-known:ro
    - /srv/wordpress/htaccess:/var/www/html/.htaccess
    - /srv/wordpress/wp-config.php:/var/www/html/wp-config.php
    - /srv/wordpress/wp-content:/var/www/html/wp-content
    - /srv/wordpress/wp-includes-languages:/var/www/html/wp-includes/languages
    - /srv/logs/wordpress:/var/log
    networks:
    - wordpress-front
    - wordpress-back-internal
    - wordpress-back
    mem_limit: 448m
    memswap_limit: 512m
    mem_reservation: 384m
    read_only: false
    restart: on-failure:5

########################################################################

  dokuwiki:
    extends:
      service: base-service
    build:
      context: dokuwiki
      args:
      #- DOKUWIKI_VERSION=2018-04-22c
      - DOKUWIKI_VERSION=stable
      # Languages to keep (delete all others)
      #- STRIP_LANGS_KEEP=en,fr
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dokuwiki-http.rule=Host(`dokuwiki.example.net`)"
      - "traefik.http.routers.dokuwiki-http.entrypoints=http"
      - "traefik.http.routers.dokuwiki-http.middlewares=defaultchain-http"
      - "traefik.http.routers.dokuwiki-https.rule=Host(`dokuwiki.example.net`)"
      - "traefik.http.routers.dokuwiki-https.entrypoints=https"
      - "traefik.http.routers.dokuwiki-https.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.services.dokuwiki-service.loadbalancer.server.port=80"
      # ToDo ip-whitelist on /admin
    expose:
    - "80"
    - "443"
    environment:
    - ENABLE_CRON=1
    depends_on:
      email-relay:
        condition: service_started
    links:
    - email-relay:email-relay
    volumes:
    - /srv/dokuwiki/acme-challenge/.well-known:/var/www/html/.well-known:ro
    - /srv/dokuwiki/conf:/var/www/html/conf
    - /srv/dokuwiki/lib/plugins:/var/www/html/lib/plugins
    #- /srv/dokuwiki/lib/tpl:/var/www/html/lib/tpl
    - /srv/dokuwiki/data:/var/www/html/data
    - /srv/logs/dokuwiki:/var/log
    networks:
    - dokuwiki-front
    - dokuwiki-back-internal
    - dokuwiki-back
    mem_limit: 192m
    memswap_limit: 256m
    mem_reservation: 128m
    read_only: false
    restart: on-failure:5

########################################################################

  tiddlywiki:
    extends:
      service: base-service
    build:
      context: tiddlywiki
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tiddlywiki-http.rule=Host(`tiddlywiki.example.net`)"
      - "traefik.http.routers.tiddlywiki-http.entrypoints=http"
      - "traefik.http.routers.tiddlywiki-http.middlewares=defaultchain-http"
      - "traefik.http.routers.tiddlywiki-https.rule=Host(`tiddlywiki.example.net`)"
      - "traefik.http.routers.tiddlywiki-https.entrypoints=https"
      - "traefik.http.routers.tiddlywiki-https.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.services.tiddlywiki-service.loadbalancer.server.port=8080"
    expose:
    - "8080"
    environment:
    # See docker-entrypoint.sh for the full list
    - WIKI_FOLDER=wiki
    - PATHPREFIX=
    - PORT=8080
    - ANON_USERNAME=
    - USERNAME=
    - PASSWORD=
    volumes:
    - /srv/tiddlywiki:/srv
    networks:
    - tiddlywiki-front
    mem_limit: 384m
    memswap_limit: 512m
    mem_reservation: 256m
    restart: on-failure:5

########################################################################

  # https://github.com/silverwind/droppy
  droppy:
    extends:
      service: base-service
    image: silverwind/droppy
    init: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.droppy-http.rule=Host(`droppy.example.net`)"
      - "traefik.http.routers.droppy-http.entrypoints=http"
      - "traefik.http.routers.droppy-http.middlewares=defaultchain-http"
      - "traefik.http.routers.droppy-https.rule=Host(`droppy.example.net`)"
      - "traefik.http.routers.droppy-https.entrypoints=https"
      - "traefik.http.routers.droppy-https.middlewares=defaultchain-https"
      - "traefik.http.services.droppy-service.loadbalancer.server.port=8989"
    command: ["/usr/bin/droppy", "start", "--color", "-f", "/files", "-c", "/config"]
    expose:
    - "8989"
    #environment:
    #- UID=nobody
    #- GID=nogroup
    user: nobody:nogroup
    volumes:
    - /opt/droppy:/config
    - /srv/droppy:/files:ro
    networks:
    - droppy
    healthcheck:
      test: wget -q -O /dev/null localhost:8989 || exit 1
      interval: 240s
      timeout: 5s
      retries: 1
      start_period: 10s
    cpu_shares: 128
    mem_limit: 192m
    memswap_limit: 256m
    mem_reservation: 128m
    restart: unless-stopped

########################################################################

  email-relay:
    extends:
      service: base-service
    build:
      context: email-relay
      args:
      - POSTFIX_HOSTNAME=myhost.example.net
    expose:
    - "25"
    environment:
    - ENABLE_SYSLOG=1
    - ENABLE_CRON=1
    volumes:
    - /opt/email-relay/dkim:/usr/local/etc/dkim:ro
    - /srv/logs/email-relay:/var/log
    networks:
    - tomcat-back
    - owncloud-back
    - nextcloud-back
    - ttrss-back
    - wordpress-back
    - dokuwiki-back
    - bitwarden
    cpu_shares: 128
    mem_limit: 64m
    memswap_limit: 96m
    mem_reservation: 32m
    read_only: false
    restart: always

########################################################################

  mysql:
    extends:
      service: base-service
    #image: mysql/mysql-server:${MYSQL_VERSION:-5.7}
    image: mysql:${MYSQL_VERSION:-5.7}
    init: true
    labels:
      - "com.symfony.server.service-prefix=DATABASE"
      # The "mysql-cron-backup" label will enable backup via external cron container
      - "mysql-cron-backup"
    # https://dev.mysql.com/doc/mysql-port-reference/en/mysql-ports-reference-tables.html
    expose:
    - "3306"
    - "33060"
    - "33061"
    - "33062"
    environment:
    - MYSQL_ROOT_PASSWORD=
    #- MYSQL_LOG_CONSOLE=true
    #- MYSQL_CUSTOM_OPTS=--key_buffer_size=4M --sort_buffer_size=128K --read_buffer_size=64K --net_buffer_length=8K
    #- MYSQL_CUSTOM_OPTS=--innodb_buffer_pool_size=64M --innodb_log_buffer_size=8M
    #- MYSQL_CUSTOM_OPTS=--default-storage-engine=MyISAM --default_tmp_storage_engine=MyISAM
    #- MYSQL_CUSTOM_OPTS=--sql-mode=NO_ENGINE_SUBSTITUTION
    # http://bugs.mysql.com/bug.php?id=68287 [MySQL 5.6]
    # There are thresholds based on table_open_cache and table_definition_cache and max_connections and crossing the thresholds produces a big increase in RAM used. The thresholds work by first deciding if the server size is small, medium or large.
    # Small: all three are same as or less than defaults (2000, 400, 151). (max 52.6 megabytes RAM)
    # Large: any of the three is more than twice the default. (min 400 megabytes RAM)
    # Medium: others. (90.7-98.4 megabytes RAM)
    # default values: [MySQL 5.7]
    #   table_open_cache = 2000
    #   table_definition_cache = min(2000, 400 + (table_open_cache / 2))
    #   max_connections = 151
    # instead of turning off performance_schema, you can reduce RAM usage with --table_open_cache=400 --table_definition_cache=400 --max_connections=151
    #- MYSQL_CUSTOM_OPTS=--performance_schema=off --table_definition_cache=800
    # ToDo: switch to --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    command: ["--datadir=/var/lib/mysql", "--user=mysql", "--bind-address=0.0.0.0", "--log-error=/var/log/mysql/error.log", "--pid-file=/var/run/mysqld/mysqld.pid", "--socket=/var/run/mysqld/mysqld.sock", "--port=3306", "--character-set-server=utf8", "--collation-server=utf8_unicode_ci", "--skip-character-set-client-handshake", "--performance_schema=off", "--table_definition_cache=800"]
    tmpfs:
    - /run/mysqld:rw,nosuid,dev,noexec,relatime,size=16k,uid=999,gid=999,mode=755
    volumes:
    - /opt/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    # following 2 files are a hack to enable read_only: true
    - /opt/mysql/healthcheck.cnf:/healthcheck.cnf
    - /opt/mysql/mysql-init-complete:/mysql-init-complete
    #- /opt/mysql/conf.d:/etc/mysql/conf.d
    - /srv/mysql/data:/var/lib/mysql
    - /srv/logs/mysql:/var/log
#    healthcheck:
#      test: ["CMD", "mysqladmin", "--silent", "--no-beep", "--wait=0", "--connect_timeout=1", "--host=127.0.0.1", "--user=${self:services.mysql.environment.MYSQL_USER:-root}", "--password=${self:services.mysql.environment.MYSQL_PASSWORD:-$self:services.mysql.environment.MYSQL_ROOT_PASSWORD}", "ping"]
#      test: mysqladmin --silent --no-beep --wait=0 --connect_timeout=1 --host=127.0.0.1 --user="$${MYSQL_USER:-root}", --password="$${MYSQL_PASSWORD:-$$MYSQL_ROOT_PASSWORD}" ping
#      test: ["CMD", "/docker-entrypoint-initdb.d/docker-healthcheck"]
#      interval: 30s
#      timeout: 5s
#      retries: 1
#      start_period: 10s
    networks:
    #- tomcat-back-internal
    - owncloud-back-internal
    - nextcloud-back-internal
    - ttrss-back-internal
    - wordpress-back-internal
    #ulimits:
    #  nproc: 65535
    #  nofile:
    #    soft: 20000
    #    hard: 40000
    #cpu_shares: 512
    mem_limit: 448m
    memswap_limit: 512m
    mem_reservation: 416m
    restart: unless-stopped

  mysql-backup:
    build:
      context: mysql-cron
    init: true
    environment:
    - MYSQL_CRON_LABEL=mysql-cron-backup
    - MYSQL_ROOT_PASSWORD=
    #depends_on:
    #  mysql:
    #    condition: service_started
    volumes:
    - /srv/mysql/backup:/srv
    - /var/run/docker.sock:/var/run/docker.sock:ro
    cpu_shares: 256
    mem_limit: 64m
    memswap_limit: 128m
    mem_swappiness: 10
    mem_reservation: 8m
    # logrotate needs /var/lib/logrotate.status and /var/log/messages
    read_only: false
    restart: on-failure:3

########################################################################

  memcached:
    image: memcached:1.5-alpine
    init: true
    command: ["memcached", "-m", "64", "-p", "11211", "-c", "256"]
    expose:
    - "11211/tcp"
    - "11211/udp"
    healthcheck:
      test: if [ `pgrep -cx memcached` -eq 0 ]; then echo "No memcached process!"; exit 1; else exit 0; fi
      interval: 30s
      timeout: 5s
      retries: 1
      start_period: 2s
    cpu_shares: 128
    mem_limit: 128m
    memswap_limit: 128m
    read_only: true
    restart: always

  memcached-owncloud:
    extends:
      service: memcached
    command: ["memcached", "-m", "32", "-p", "11211", "-c", "256"]
    networks:
    - owncloud-back-internal

  memcached-wordpress:
    extends:
      service: memcached
    command: ["memcached", "-m", "64", "-p", "11211", "-c", "256"]
    networks:
    - wordpress-back-internal

########################################################################

  redis:
    image: redis:5-alpine
    init: true
    labels:
      - "com.symfony.server.service-prefix=REDIS"
    # https://raw.githubusercontent.com/antirez/redis/5.0/redis.conf
    command: ["--daemonize", "no", "--protected-mode", "no", "--tcp-backlog", "511", "--loglevel", "notice", "--logfile", "", "--databases", "1", "--save", "900", "1", "--save", "300", "10", "--save", "60", "10000", "--stop-writes-on-bgsave-error", "yes", "--dbfilename", "dump.rdb", "--dir", "/data", "--maxclients", "100", "--maxmemory", "64mb", "--maxmemory-policy", "noeviction", "--slowlog-log-slower-than", "10000", "--slowlog-max-len", "128"]
    expose:
    - "6379"
    #volumes:
    #- /srv/redis:/data
    healthcheck:
      test: ping="$$(redis-cli --raw ping)" && [ "$$ping" = 'PONG' ] || exit 1
      interval: 30s
      timeout: 5s
      retries: 1
      start_period: 2s
    #sysctls:
    #- sys.net.core.somaxconn=511
    #- sys.net.core.tcp_max_syn_backlog=511
    #- vm.overcommit_memory=1
    #- sys.kernel.mm.transparent_hugepage.enabled=never
    cpu_shares: 128
    mem_limit: 128m
    memswap_limit: 128m
    mem_reservation: 80m
    read_only: true
    restart: always

  redis-owncloud:
    extends:
      service: redis
    volumes:
    - /srv/redis-owncloud:/data
    networks:
    - owncloud-back-internal

  redis-nextcloud:
    extends:
      service: redis
    volumes:
    - /srv/redis-nextcloud:/data
    networks:
    - nextcloud-back-internal

########################################################################

  dovecot:
    extends:
      service: base-service
    build: dovecot-imap
    ports:
    # IMAP(s)
    #- "143:143"
    - "993:993"
    # POP3(s)
    #- "110:110"
    #- "995:995"
    # SMTP / submission / SMTPs
    #- "25:25"
    #- "587:587"
    #- "465:465"
    # Sieve
    #- "4190:4190"
    volumes:
    - /opt/dovecot:/opt/dovecot:ro
    - /srv/dovecot:/srv/dovecot
    - /srv/logs/dovecot:/var/log
    tmpfs:
    # this will have the side-effect of regenerating SSL parameters @ each startup
    - /var/lib/dovecot:rw,nosuid,nodev,noexec,size=32k
    networks:
    - dovecot
    cpu_shares: 256
    mem_limit: 128m
    memswap_limit: 192m
    mem_reservation: 96m
    restart: unless-stopped

########################################################################

  # https://github.com/dani-garcia/bitwarden_rs/wiki
  bitwarden:
    extends:
      service: base-service
    #image: bitwardenrs/server:latest
    image: bitwardenrs/server:alpine
    init: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bitwarden-http.rule=Host(`vault.example.net`)"
      - "traefik.http.routers.bitwarden-http.entrypoints=http"
      - "traefik.http.routers.bitwarden-http.middlewares=403"
      - "traefik.http.routers.bitwarden-https.rule=Host(`vault.example.net`)"
      - "traefik.http.routers.bitwarden-https.entrypoints=https"
      - "traefik.http.routers.bitwarden-https.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.routers.bitwarden-https.service=bitwarden-web"
      - "traefik.http.services.bitwarden-web.loadbalancer.server.port=80"
      
      - "traefik.http.routers.bitwarden-hub.rule=Host(`vault.example.net`) && PathPrefix(`/notifications/hub`)"
      - "traefik.http.routers.bitwarden-hub.entrypoints=https"
      - "traefik.http.routers.bitwarden-hub.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.routers.bitwarden-hub.service=bitwarden-hub"
      - "traefik.http.services.bitwarden-hub.loadbalancer.server.port=3012"
      
      - "traefik.http.routers.bitwarden-negociate.rule=Host(`vault.example.net`) && PathPrefix(`/notifications/hub/negotiate`)"
      - "traefik.http.routers.bitwarden-negociate.entrypoints=https"
      - "traefik.http.routers.bitwarden-negociate.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.routers.bitwarden-negociate.service=bitwarden-negociate"
      - "traefik.http.services.bitwarden-negociate.loadbalancer.server.port=80"
      
      # IP restriction on https /admin endpoint
      # Forbid admin endpoint on plain http
      - "traefik.http.routers.bitwarden-403.rule=Host(`vault.example.net`) && PathPrefix(`/admin`)"
      - "traefik.http.routers.bitwarden-403.entrypoints=http"
      - "traefik.http.routers.bitwarden-403.priority=65535"
      - "traefik.http.routers.bitwarden-403.middlewares=403"
      # IP restriction on https admin endpoint
      - "traefik.http.routers.bitwarden-407.rule=Host(`vault.example.net`) && PathPrefix(`/admin`)"
      - "traefik.http.routers.bitwarden-407.entrypoints=https"
      - "traefik.http.routers.bitwarden-407.priority=65535"
      - "traefik.http.routers.bitwarden-407.middlewares=std-ipwhitelist,defaultchain-https"
    expose:
    - "80"
    - "3012"
    # See https://github.com/dani-garcia/bitwarden_rs/blob/master/.env.template
    environment:
    #- DOMAIN=https://bw.example.com
    - SIGNUPS_ALLOWED=false
    - INVITATIONS_ALLOWED=false
    # generate token: e.g. `openssl rand -base64 48`
    #- ADMIN_TOKEN=Vy2VyYTTsKPv8W5aEOWUbB/Bt3DEKePbHmI4m9VcemUMS2rEviDowNAFqYi1xjmp
    #- WEB_VAULT_ENABLED=true
    - WEBSOCKET_ENABLED=true
    #- SHOW_PASSWORD_HINT=true
    #- DISABLE_ICON_DOWNLOAD=false
    #- ICON_CACHE_TTL=2592000
    #- ICON_CACHE_NEGTTL=259200
    - ICON_BLACKLIST_REGEX=192\.168\.[1-2]?[0-9]?[0-9]\.[0-9].*^
    #- ROCKET_PORT=80
    #- ROCKET_LIMITS={json=10485760}
    #- ROCKET_WORKERS=10
    - ROCKET_ENV=production
    - SMTP_HOST=email-relay
    - SMTP_FROM=bitwarden@example.com
    - SMTP_PORT=25
    - SMTP_SSL=false
    #- SMTP_USERNAME=
    #- SMTP_PASSWORD=
    # Logging to file; it is recommended to also set 'ROCKET_CLI_COLORS=off'
    #- LOG_FILE=/data/bitwarden.log
    depends_on:
      email-relay:
        condition: service_started
    volumes:
    - /srv/bitwarden:/data
    #- /opt/bitwarden/web-vault:/web-vault:ro
    networks:
    - bitwarden
    cpu_shares: 512
    mem_limit: 128m
    memswap_limit: 192m
    mem_reservation: 32m
    restart: unless-stopped

  # https://gitlab.com/1O/bitwarden_rs-backup
  bitwarden-db-backup:
    extends:
      service: base-service
    image: registry.gitlab.com/1o/bitwarden_rs-backup:latest
    #image: registry.gitlab.com/1o/bitwarden_rs-backup:rpi3
    init: true
    #environment:
    #- CRON_TIME=0 5 * * *
    #- DB_FILE=/data/db.sqlite3
    #- BACKUP_FILE=/data/db-backup/backup.sqlite3
    #- TIMESTAMP=false
    volumes:
    - /srv/bitwarden:/data

########################################################################

  web-ssh:
    build: web-ssh
    init: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webssh-http.rule=Host(`webssh.docker.localhost`)"
      - "traefik.http.routers.webssh-http.entrypoints=http"
      - "traefik.http.routers.webssh-http.middlewares=403"
      - "traefik.http.routers.webssh-https.rule=Host(`webssh.docker.localhost`)"
      - "traefik.http.routers.webssh-https.entrypoints=https"
      - "traefik.http.routers.webssh-https.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.services.webssh-service.loadbalancer.server.port=8888"
    expose:
    - "8888"
    - "4433"
    volumes:
    - /srv/webssh:/srv
    networks:
    - webssh
    cpu_shares: 256
    mem_limit: 64m
    memswap_limit: 96m
    mem_reservation: 24m
    read_only: true
    restart: unless-stopped

########################################################################

  # AdGuard Home is our internal + external (ACLs) DNS server
  adguard-home:
    image: adguard/adguardhome:latest
    init: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adguardhome-http.rule=Host(`adguard.docker.localhost`)"
      - "traefik.http.routers.adguardhome-http.entrypoints=http"
      - "traefik.http.routers.adguardhome-http.middlewares=403"
      - "traefik.http.routers.adguardhome-https.rule=Host(`adguard.docker.localhost`)"
      - "traefik.http.routers.adguardhome-https.entrypoints=https"
      - "traefik.http.routers.adguardhome-https.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.services.adguardhome-service.loadbalancer.server.port=3000"
    ports:
    #- "192.0.2.1:53:53/tcp"
    #- "192.0.2.1:53:53/udp"
    #- "67:67/udp"
    #- "68:68/udp"
    #- "80:80/tcp"
    #- "443:443/tcp"
    - "853:853/tcp"
    - "784:784/udp"
    #- "3000:3000/tcp"
    expose:
    - "53/tcp"
    - "53/udp"
    - "67/udp"
    - "68/udp"
    - "80"
    - "443"
    - "853/tcp"
    - "784/udp"
    - "3000"
    volumes:
    - /opt/adguard-home:/opt/adguardhome/conf
    - /srv/adguard-home:/opt/adguardhome/work
    #- /opt/letsencrypt:/etc/letsencrypt:ro,z
    - /opt/http-proxy/tls:/opt/tls:ro,z
    user: nobody
    working_dir: /opt/adguardhome/work
    cap_add:
    - NET_BIND_SERVICE
    networks:
      vpn:
        ipv4_address: 172.31.53.53
    cpu_shares: 512
    mem_limit: 384m
    memswap_limit: 384m
    mem_reservation: 64m
    read_only: true
    restart: always

########################################################################

  web-accelerator:
    extends:
      service: base-service
    build: ziproxy
    expose:
    - "3128"
    dns:
    - 172.31.53.53
    #volumes:
    #- /srv/logs/ziproxy:/var/log
    networks:
      vpn:
        ipv4_address: 172.31.53.28
    cpu_shares: 128
    mem_limit: 128m
    memswap_limit: 192m
    mem_reservation: 32m
    restart: unless-stopped

########################################################################

  openvpn:
    extends:
      service: base-service
    build:
      context: vpn-openvpn
      args:
      # stable|testing|release/2.3|release/2.4
      - OPENVPN_VERSION=stable
    #devices:
    #  - "/dev/net/tun:/dev/net/tun:rwm"
    ports:
    - "1194:1194/udp"
    - "443:1194/udp"
    #- "1194:1194/tcp"
    environment:
    #- PROTOCOL=udp
    #- DNS_USE_RESOLVCONF=true
    #- DNS_EXTRA_SERVER_1=172.31.53.254
    - DNS_EXTRA_SERVER_1=172.31.53.53
    #- DNS_EXTRA_SERVER_2=8.8.4.4
    # OpenVPN extra options
    #- OPENVPN_OPTS=
    # See https://github.com/OpenVPN/easy-rsa/blob/master/doc/EasyRSA-Advanced.md
    - EASYRSA_REQ_COUNTRY=US
    - EASYRSA_REQ_PROVINCE=California
    - EASYRSA_REQ_CITY=San Francisco
    - EASYRSA_REQ_ORG=Copyleft Certificate Co
    #- EASYRSA_REQ_EMAIL=me@example.net
    #- EASYRSA_REQ_OU=My Organizational Unit
    #- EASYRSA_KEY_SIZE=2048
    # CA expiration time in days
    #- EASYRSA_CA_EXPIRE=3650
    # issued cert expiration time in days
    #- EASYRSA_CERT_EXPIRE=3650
    #- EASYRSA_REQ_CN=ChangeMe
    #- EASYRSA_BATCH=
    depends_on:
      adguard-home:
        condition: service_started
      web-accelerator:
        condition: service_started
    dns:
    - 172.31.53.53
    # use service on gateway IP since docker-compose 1.6 can't assign a fixed IP to dns container
    #- 172.31.53.254
    volumes:
    - /opt/openvpn:/etc/openvpn
    # Required for `modprobe tun`
    - /lib/modules:/lib/modules:ro
    #- /srv/logs/openvpn:/var/log
    #tmpfs:
    # required to have the container read-only in docker < 17.12.0
    #- /dev/net:rw,nosuid,dev,noexec,relatime,size=16k
    #- /var/log
    cap_add:
    - NET_ADMIN
    networks:
    - vpn
    sysctls:
    - net.ipv4.ip_forward=1
    - net.ipv4.conf.all.send_redirects=0
    - net.ipv6.conf.default.forwarding=1
    - net.ipv6.conf.all.forwarding=1
    cpu_shares: 128
    mem_limit: 64m
    memswap_limit: 96m
    mem_reservation: 32m
    restart: unless-stopped

########################################################################

  transmission:
    extends:
      service: base-service
    build:
      context: transmission
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission-http.rule=Host(`example.net`) && PathPrefix(`/transmission/`)"
      - "traefik.http.routers.transmission-http.entrypoints=http"
      - "traefik.http.routers.transmission-http.middlewares=403"
      - "traefik.http.routers.transmission-https.rule=Host(`example.net`) && PathPrefix(`/transmission/`)"
      - "traefik.http.routers.transmission-https.entrypoints=https"
      - "traefik.http.routers.transmission-https.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.services.transmission-service.loadbalancer.server.port=9091"
    expose:
    - "9091"
    ports:
    - "51413:51413/tcp"
    - "51413:51413/udp"
    volumes:
    - /srv/transmission:/var/lib/transmission-daemon
    # Required for `modprobe tcp_lp`
    - /lib/modules:/lib/modules:ro
    networks:
    - transmission
    #sysctls:
    #- net.core.rmem_max=4194304
    #- net.core.wmem_max=1048576
    cpu_shares: 64
    mem_limit: 128m
    memswap_limit: 192m
    mem_reservation: 96m
    #blkio-weight: 10
    restart: "no"

########################################################################

  tt-rss:
    extends:
      service: base-service
    build:
      context: tt-rss
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ttrss-http.rule=Host(`ttrss.example.net`))"
      - "traefik.http.routers.ttrss-http.entrypoints=http"
      - "traefik.http.routers.ttrss-http.middlewares=403"
      - "traefik.http.routers.ttrss-https.rule=Host(`ttrss.example.net`)"
      - "traefik.http.routers.ttrss-https.entrypoints=https"
      - "traefik.http.routers.ttrss-https.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.services.ttrss-service.loadbalancer.server.port=80"
    expose:
    - "80"
    environment:
    - DB_TYPE=mysql
    - DB_HOST=mysql
    - DB_PORT=3306
    - DB_NAME=fox
    - DB_USER=fox
    - DB_PASS=
    - SELF_URL_PATH=https://ttrss.example.net
    - REG_NOTIFY_ADDRESS=user@your.domain.dom
    - SMTP_FROM_ADDRESS=noreply@your.domain.dom
    # Don't change this one!
    - ENABLE_CRON=1
    depends_on:
      mysql:
        condition: service_healthy
      email-relay:
        condition: service_started
    volumes:
    #- /srv/tt-rss:/var/www/html
    - /srv/tt-rss/.well-known:/var/www/html/.well-known:ro
    networks:
    - ttrss-front
    - ttrss-back-internal
    - ttrss-back
    cpu_shares: 64
    mem_limit: 128m
    memswap_limit: 192m
    mem_reservation: 96m
    read_only: false
    restart: unless-stopped

########################################################################

  icecast:
    extends:
      service: base-service
    build:
      context: icecast
    init: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.icecast-http.rule=Host(`icecast.docker.localhost`)"
      - "traefik.http.routers.icecast-http.entrypoints=http"
      - "traefik.http.routers.icecast-http.middlewares=403"
      - "traefik.http.routers.icecast-https.rule=Host(`icecast.docker.localhost`)"
      - "traefik.http.routers.icecast-https.entrypoints=https"
      - "traefik.http.routers.icecast-https.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.services.icecast-service.loadbalancer.server.port=8000"
      # /admin is protected by Icecast configuration
    volumes:
      - /opt/icecast/icecast.xml:/etc/icecast.xml:ro
      - /opt/icecast/htpasswd:/etc/icecast.htpasswd
      - /srv/logs/icecast:/var/log/icecast
    healthcheck:
      test: ["CMD", "pgrep", "-x", "icecast"]
      interval: 240s
      timeout: 5s
      retries: 1
      start_period: 10s
    networks:
      - icecast-front
      - icecast-back-internal
    expose:
      - "8000"
      - "8001"
      - "8080"
      - "8443"
    command: ["icecast", "-c", "/etc/icecast.xml"]
    cpu_shares: 128
    mem_limit: 32m
    memswap_limit: 32m
    mem_reservation: 4m
    restart: unless-stopped

  darkice:
    extends:
      service: base-service
    build:
      context: darkice
    init: true
    labels:
      - "traefik.enable=false"
    depends_on:
      icecast:
        condition: service_healthy
    group_add:
      - audio
      # /dev/snd is group-owned by `audio` which is not the same gid on host than in container!
      # getent group audio | awk -F: '{print $3}'
      - 29
    devices:
      - "/dev/snd:/dev/snd"
    volumes:
      - /opt/darkice/darkice.cfg:/etc/darkice.cfg:ro
      # can not mount /proc/asound this way, and can't make security_opt systempaths=unconfined... But doesn't seem to be needed...
      #- "/proc/asound:/proc/asound:ro"
    healthcheck:
      test: ["CMD", "pgrep", "-x", "darkice"]
      interval: 240s
      timeout: 5s
      retries: 1
      start_period: 10s
    networks:
      - icecast-back-internal
    command: ["darkice", "-c", "/etc/darkice.cfg"]
    #security_opt:
    #  - systempaths:unconfined
    cpu_shares: 256
    mem_limit: 16m
    memswap_limit: 16m
    mem_reservation: 4m
    #privileged: false
    restart: unless-stopped

########################################################################

#  forked-daapd:
#    extends:
#      service: base-service
#    image: linuxserver/daapd
#    init: false
#    labels:
#      - "traefik.enable=false"
#    ports:
#      # DAAP
#      - "3689:3689"
#      # websocket
#      - "3688:3688"
#      # MPD
#      - "6600:6600"
#      # mDNS
#      - "5353:5353/udp"
#      # SSDP
#      - "1900:1900/udp"
#    expose:
#      - "3689"
#      - "3688"
#      - "6600"
#      - "5353/udp"
#      - "1900/udp"
#    environment:
#    - PUID=1000
#    - PGID=1000
#    - TZ=Europe/Paris
#    devices:
#      - "/dev/snd:/dev/snd"
#    volumes:
#      - /opt/forked-daapd:/config
#      - /srv/forked-daapd:/music:ro
#      #- /srv/logs/forked-daapd:/var/log
#    healthcheck:
#      test: ["CMD", "pgrep", "forked-daapd"]
#      interval: 240s
#      timeout: 5s
#      retries: 1
#      start_period: 10s
#    networks:
#      - daapd-front
##    network_mode: host
#    cpu_shares: 128
#    mem_limit: 64m
#    memswap_limit: 96m
#    mem_reservation: 24m
#    read_only: false
#    restart: unless-stopped

########################################################################

  # https://github.com/statping/statping/wiki/Docker-Compose
  statping:
    extends:
      service: base-service
    image: statping/statping
    init: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.statping-http.rule=Host(`statping.docker.localhost`)"
      - "traefik.http.routers.statping-http.entrypoints=http"
      - "traefik.http.routers.statping-http.middlewares=403"
      - "traefik.http.routers.statping-https.rule=Host(`statping.docker.localhost`)"
      - "traefik.http.routers.statping-https.entrypoints=https"
      - "traefik.http.routers.statping-https.middlewares=std-ipwhitelist,defaultchain-https"
      - "traefik.http.services.statping-service.loadbalancer.server.port=8080"
    expose:
      - "8080"
    environment:
    # https://github.com/statping/statping/wiki/Environment-Variables
    # https://github.com/statping/statping/wiki/Config-with-.env-File
    # https://github.com/statping/statping/blob/dev/utils/env.go
    - ALLOW_REPORTS=false
    #- DISABLE_LOGS=true
    #- REMOVE_AFTER=2160h
    #- CLEANUP_INTERVAL=1h
    - DB_CONN=sqlite
    #- DISABLE_COLORS=true
    - LANGUAGE=en
    #- NAME=Statping Sample Data
    #- DESCRIPTION=This status page has sample data included
    #- DOMAIN=http://localhost:8080
    #- ADMIN_USER=admin
    #- ADMIN_PASSWORD=admin
    #- ADMIN_EMAIL=info@admin.com
    #- API_SECRET=
    - SAMPLE_DATA=false
    volumes:
      - /srv/statping:/app
    cap_add:
      - NET_RAW
    networks:
      - statping-front
    cpu_shares: 128
    mem_limit: 128m
    memswap_limit: 128m
    mem_reservation: 64m
    read_only: true
    restart: unless-stopped

########################################################################

  # https://github.com/maxmind/geoipupdate/blob/master/doc/docker.md
  geoipupdate:
    extends:
      service: base-service
    image: maxmindinc/geoipupdate
    init: true
    labels:
      - "traefik.enable=false"
    environment:
    - GEOIPUPDATE_ACCOUNT_ID=XXXXXX
    - GEOIPUPDATE_LICENSE_KEY=XXXXXXXXXXXXXXXX
    - 'GEOIPUPDATE_EDITION_IDS=GeoLite2-ASN GeoLite2-City GeoLite2-Country'
    - GEOIPUPDATE_FREQUENCY=720
    - GEOIPUPDATE_PRESERVE_FILE_TIMES=1
    #- GEOIPUPDATE_VERBOSE=1
    volumes:
      - /srv/GeoIP:/usr/share/GeoIP
    cpu_shares: 128
    mem_limit: 128m
    memswap_limit: 128m
    mem_reservation: 64m
    read_only: false
    restart: unless-stopped

########################################################################

#  jellyfin:
#    extends:
#      service: base-service
#    image: jellyfin/jellyfin
#    init: true
#    labels:
#      # See https://jellyfin.org/docs/general/networking/traefik2.html
#      - "traefik.enable=false"
#    user: 1000:1000
#    group_add: # by id as these may not exist within the container. Needed to provide permissions to the VAAPI Devices
#      - "107" #render
#      - "44"  #video
#    ports:
#      # DLNA
#      - "1900:1900"
#    expose:
#      # HTTP
#      - "8096"
#      # HTTPS
#      - "8920"
#    environment:
#    - JELLYFIN_PublishedServerUrl=192.0.2.1
#    volumes:
#      - /srv/jellyfin/config:/config
#      - /srv/jellyfin/cache:/cache
#      - /srv/media:/media:ro
#    healthcheck:
#      test: ["CMD", "pgrep", "jellyfin"]
#      interval: 240s
#      timeout: 5s
#      retries: 1
#      start_period: 10s
#    networks:
#      - jellyfin-front
#    # Network mode of 'host' exposes the ports on the host. This is needed for DLNA access or HDHomeRun.
##    network_mode: host
#    cpu_shares: 128
#    mem_limit: 128m
#    memswap_limit: 128m
#    mem_reservation: 64m
#    read_only: true
#    restart: unless-stopped

########################################################################
########################################################################

#volumes:
#    my-nfs-mount:
#        driver: local
#        driver_opts:
#            type: "nfs4"
#            o: "addr=192.0.2.111,ro"
#            #o: "addr=192.0.2.111,vers=4,soft,timeo=180,bg,tcp,ro"
#            device: ":/path/to/server/nfs/share"

########################################################################
########################################################################

networks:
  #default:
  #  driver_opts:
  #    com.docker.network.bridge.enable_icc: "false"
  #    com.docker.network.bridge.enable_ip_masquerade: "false"
  #    com.docker.network.enable_ipv6: "false"
  tomcat-front:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.1.0/24
  tomcat-back-internal:
    driver: bridge
    ipam:
      config:
      - subnet: 172.29.1.0/24
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
    internal: true
  tomcat-back:
    driver: bridge
    ipam:
      config:
      - subnet: 172.30.1.0/24
  owncloud-front:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.2.0/24
  owncloud-back-internal:
    driver: bridge
    ipam:
      config:
      - subnet: 172.29.2.0/24
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
    internal: true
  owncloud-back:
    driver: bridge
    ipam:
      config:
      - subnet: 172.30.2.0/24
  nextcloud-front:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.3.0/24
  nextcloud-back-internal:
    driver: bridge
    ipam:
      config:
      - subnet: 172.29.3.0/24
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
    internal: true
  nextcloud-back:
    driver: bridge
    ipam:
      config:
      - subnet: 172.30.3.0/24
  ttrss-front:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.4.0/24
  ttrss-back-internal:
    driver: bridge
    ipam:
      config:
      - subnet: 172.29.4.0/24
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
    internal: true
  ttrss-back:
    driver: bridge
    ipam:
      config:
      - subnet: 172.30.4.0/24
  wordpress-front:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.5.0/24
  wordpress-back-internal:
    driver: bridge
    ipam:
      config:
      - subnet: 172.29.5.0/24
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
    internal: true
  wordpress-back:
    driver: bridge
    ipam:
      config:
      - subnet: 172.30.5.0/24
  dokuwiki-front:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.6.0/24
  dokuwiki-back-internal:
    driver: bridge
    ipam:
      config:
      - subnet: 172.29.6.0/24
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
    internal: true
  dokuwiki-back:
    driver: bridge
    ipam:
      config:
      - subnet: 172.30.6.0/24
  tiddlywiki-front:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.7.0/24
  dovecot:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.8.0/24
  transmission:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.9.0/24
  icecast-front:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.10.0/24
  icecast-back-internal:
    driver: bridge
    ipam:
      config:
      - subnet: 172.29.10.0/24
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
    internal: true
  droppy:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.11.0/24
  bitwarden:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.12.0/24
  http-static:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.13.0/24
  #daapd-front:
  #  driver: bridge
  #  ipam:
  #    config:
  #    - subnet: 172.31.14.0/24
#  daapd-front:
#    driver: macvlan
#    driver_opts:
#      parent: eth0
#      ipvlan_mode: l2
#    ipam:
#      config:
#        - subnet: 192.168.1.0/24
#          gateway: 192.168.1.254
#          ip_range: 192.168.1.128/31 # IP from this pool are assigned automatically
  webssh:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.15.0/24
  statping-front:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.16.0/24
  vpn:
    driver: bridge
    ipam:
      config:
      - subnet: 172.31.53.0/24
        ip_range: 172.31.53.0/24
        gateway: 172.31.53.254
        # defining aux addresses prevents from assigning them to containers
        #aux_addresses:
        #  dns: 172.31.53.53
...
